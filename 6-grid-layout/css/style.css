/* reset declaration clears padding */
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

html,
body {
    height: 100vh;
    /* "vh" in this case translates to "make the entire html fill 100% of the viewport (i.e. the screen size) */
}

.container {
    display: grid;
    /* initial grid layout */
    grid-template-columns: 1fr;
    grid-gap: 5px;
    height: 100%;
}

.container>* {
    background: #eeeeee;
}

.container>header,
nav,
aside,
section,
footer {
    padding: 20px;
}

/* declarations prior to this part apply to mobile layout */
/* begin media query to build holy grail layout for larger screens only */
@media only screen and (min-width: 600px) {
    .container {
        grid-template-columns: repeat(6, 1fr);
        /* render 6 columns in this container and make each equal in width */
    }

    .container header,
    .container nav,
    .container footer {
        grid-column: span 6;
        /* tell the header, nav, and footer elements to span all six columns */
    }

    .container section {
        grid-column: span 4;
        /* tell the .container section to span only 4 of the 6 columns */
    }

    /* it looks like the .left nav and aside just fill in the empty column on either side of the main section 4-span besed on order in the html (<aside id="left-nav">, <section role="main">, <aside> */
}

/* if you wanted to just have a right aside e.g., you would delete .left-nav html and change the .container section to 5-span or add grid-column span 2 to .container aside*/